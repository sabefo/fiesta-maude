mod PERSONAS
  pr NAT .
  pr STRING .

  sort Persona Bolsa Botellon .
  subsort Bolsa < Persona .
  subsort Persona < Botellon .

  *** ---- Refresco, Hielo, Alcohol
  op BolsaVacia[0,0,0] : Nat Nat Nat -> Bolsa [ctor] .
  op Bolsa[_,_,_] : Nat Nat Nat -> Bolsa [ctor] .
  *** ---- Nombre, Edad, Bolsa, VIP, Peda, Ubicacion
  op Persona(_,_,[_,_,_],_,_,_) : String Nat Bolsa Nat Nat Nat -> Persona [ctor] .

  op __ : Persona Persona -> Botellon [ctor assoc comm id: nadie] .
endm

fmod BOTELLON
  pr NAT .
  pr STRING .
  pr PERSONAS .
  pr FILA .

  vars R R' H H' A A' N N' V V' P P' U U' : Nat .
  vars S S' : String .
  vars W W' : Persona .

  op entrabotellon : Botellon Persona -> Botellon [ctor].

  op bebeRefresco : Persona Persona -> Persona Persona .
  ceq bebeRefresco(Persona(S,N,Bolsa[R,H,A],V,P,U) W) = Persona(S,N,Bolsa[R - 1,H - 1,A],V,P,U) W
    if R > 0 /\ H > 0 .

  ceq bebeRefresco(Persona(S,N,Bolsa[R,H,A],V,P,U) Persona(S',N',Bolsa[R',H',A'],V',P',U')) = Persona(S,N,Bolsa[R - 1,H,A],V,P,U) Persona(S',N',Bolsa[R',H' - 1,A'],V',P',U')
    if R > 0 /\ H = 0 /\ H' > 0 .

  ***    owise = no se puede .

  op bebeTequila : Persona Persona -> Persona Persona .
  ceq bebeTequila((Persona(S,N,Bolsa[R,H,A],V,P,U) W) = Persona(S,N,Bolsa[R - 1,H - 1,A - 1], V, P + 1,U) W
    if R > 0 /\ H > 0 /\ A > 0 .

  ceq bebeTequila(Persona(S,N,Bolsa[R,H,A],V,P,U) Persona(S',N',Bolsa[R',H',A'],V',P',U')) = Persona(S,N,Bolsa[R - 1, H,A - 1], V, P + 1,U) Persona(S',N',Bolsa[R',H' - 1,A'],V',P',U')
    if R > 0 /\ H = 0 /\ H'>0 /\ A > 0 .

  *** owise = no se puede .

 sort Fila .
 subsort Persona < Fila .

 vars P P' : Persona .
 vars F F' : Fila .
 vars fv : fila-vacia .

 op fila-vacia : -> Fila [ctor] .
 op enfila : Fila Persona -> Fila [ctor] .

 *** Â¿Esto cubre los 3 casos?==================

 eq enfila(fv) = fv .
 eq enfila(F,Persona(S, N, Bolsa[R, H, A], 0, P, U), Persona(S', N' ,Bolsa[R', H', A'], 1, P', U')) =
 	(F,Persona(S', N', Bolsa[R', H', A'], 1, P', U'), Persona(S, N, Bolsa[R, H, A], 0, P, U)) .

 op sacadefila : Fila Persona -> Fila [ctor] .
 ceq sacadefila(F,Persona(S, N, Bolsa[R, H, A], V, P, U)) = (F,fv) entrabotellon(Persona(S, N, Bolsa[R, H, A], V, P, U)
 	if P > 2 .

 ceq sacadefila(F,Persona(S, N, Bolsa[R, H, A], V, P, U)) = (F,fv) entrabotellon(Persona(S, N, Bolsa[R, H, A], V, P, U)
 	if N < 18 .

 op entralocal : Fila -> Fila .
 eq entralocal(fila-vacia) = fila-vacia .
 eq entralocal(enfila(P, F)) = F .

endm

mod ANTRO
  pr NAT .
  pr PERSONAS .

  sort Persona .
  *** ---- Aforo, Alcohol, Refresco
  op Antro(_,_,_) : Nat Nat Nat -> Antro [ctor] .

  *** ---- Nombre, Edad, Bolsa, VIP, Peda, Ubicacion
  op Persona(_,_,BolsaVacia[0,0,0],_,_,_) : String Nat Bolsa Nat Nat Nat -> Persona [ctor] .

  op bebeRefresco : Persona Antro -> Persona Antro .
  ceq bebeRefresco(Persona(S, N, Bolsa[0, 0, 0], V, P, U) Antro(G, A, R)) =
    Persona(S, N, Bolsa[0, 0, 0], V, P, U) Antro(G, A, R - 1)
    if R > 0 .

  op bebeTequila : Persona Antro -> Persona Antro .
  ceq bebeTequila(Persona(S, N, Bolsa[0, 0, 0], V, P, U) Antro(G, A, R)) =
    Persona(S, N, Bolsa[0, 0, 0], V, P, U) Antro(G, A - 1, R - 1)
    if R > 0 /\ A > 0 .

endm
